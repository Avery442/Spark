openapi: 3.0.3
info:
  title: Spark API
  description: This page documents the API hosted by any local instance of Spark
  version: 1.0.0
servers:
  - url: http://127.0.0.1:6724/
tags:
  - name: General
    description: General Spark control
  - name: Game State
    description: Returns information about the game state. All Echo VR POST and GET requests are proxied as well.
  - name: Overlays
    description: Enables programmatic control over Spark's overlay settings
  - name: Camera Write
    description: Enables programmatic control over the spectator camera
paths:
  
  
  
  /spark_info:
    get:
      tags:
        - General
      summary: Gets version info for Spark
      responses:
        '200':
          description: Success


  /api/go_to_waypoint/{index}:
    get:
      tags:
        - Camera Write
      summary: Goes to a specific Camera Write waypoint
      parameters:
        - name: "index"
          in: "path"
          description: "Index of the camera waypoint"
          required: true
          example: 0
          schema:
            type: "integer"
      responses:
        '200':
          description: Success
  /api/play_animation/{index}:
    get:
      tags:
        - Camera Write
      summary: Plays a specfic Camera Write animation
      parameters:
        - name: "index"
          in: "path"
          description: "Index of the camera animation"
          required: true
          example: 0
          schema:
            type: "integer"
      responses:
        '200':
          description: Success
  
  
  /api/orbit_disc_enabled/{enabled}:
    get:
      tags:
        - Camera Write
      summary: Enables or disables Disc Orbit animation
      parameters:
        - name: "enabled"
          in: "path"
          description: "Enabled or not"
          required: true
          example: true
          schema:
            type: "boolean"
      responses:
        '200':
          description: Success
  
  /api/go_to_discholder_pov:
    get:
      tags:
        - Camera Write
      summary: Switches to the POV of the disc holder
      responses:
        '200':
          description: Success
  
  /api/reload_camera_settings:
    get:
      tags:
        - Camera Write
      summary: Reloads the Camera Write settings file. This is useful if you've added animation or waypoint files and don't want to restart Spark.
      responses:
        '200':
          description: Success
  
  
  
  
  /api/set_team_name/{team_color}/{team_name}:
    post:
      tags:
        - Overlays
      summary: Sets a team name for a particular team color
      parameters:
        - name: "team_color"
          in: "path"
          description: "orange or blue"
          required: true
          example: "blue"
          schema:
            type: "string"
            enum:
              - "blue"
              - "orange"
        - name: "team_name"
          in: "path"
          description: "Team name to set"
          required: true
          example: "Ignite"
          schema:
            type: "string"
      responses:
        '200':
          description: Success
  
  
  
  /api/set_team_logo/{team_color}/{team_logo}:
    post:
      tags:
        - Overlays
      summary: Sets a team logo url for a particular team color
      parameters:
        - name: "team_color"
          in: "path"
          description: "orange or blue"
          required: true
          example: "blue"
          schema:
            type: "string"
            enum:
              - "blue"
              - "orange"
        - name: "team_logo"
          in: "path"
          description: "Team logo url to set"
          required: true
          example: "https://ignitevr.gg/images/logos/primary.png"
          schema:
            type: "string"
      responses:
        '200':
          description: Success
  
  
  
  /api/set_team_details/{team_color}:
    post:
      tags:
        - Overlays
      summary: Sets a team name and logo for a particular team color
      parameters:
        - name: "team_color"
          in: "path"
          description: "orange or blue"
          required: true
          example: "blue"
          schema:
            type: "string"
            enum:
              - "blue"
              - "orange"
      responses:
        '200':
          description: Success
  
  
  
  /api/set_caster_prefs:
    post:
      tags:
        - Overlays
      summary: Sets arbitrary json to the caster_prefs setting
      responses:
        '200':
          description: Success
  
  
  /api/set_team_names_source/{source}:
    post:
      tags:
        - Overlays
      summary: Sets the source of team names/logos
      parameters:
        - name: "source"
          in: "path"
          description: "The index of the source. 0 for manual, 1 for VRML API"
          required: true
          example: 0
          schema:
            type: "integer"
      responses:
        '200':
          description: Success
  
  
  /api/set_round_scores:
    post:
      tags:
        - Overlays
      summary: Manually set the round scores
      responses:
        '200':
          description: Success
  
  /api/get_overlay_config:
    get:
      tags:
        - Overlays
      summary: Gets the full config for overlays
      responses:
        '200':
          description: Success
  
  
  
  /api/vrml_api/{route}:
    get:
      tags:
        - Overlays
      summary: A local proxy for the VRML API at apiignite.vrmasterleague.com. This has a local cache of 30 minutes, so it can be much faster for repeated requests.
      
      parameters:
        - name: "route"
          in: "path"
          description: "The VRML API path to be fetched"
          required: true
          example: "EchoArena/Casters"
          schema:
            type: "string"
      responses:
        '200':
          description: Success
  
  
  /api/focus_spark:
    get:
      tags:
        - General
      summary: Makes the Spark window in focus, even if it's minimized to the tray.
      responses:
        '200':
          description: Success
  
  
  /api/settings/set:
    post:
      tags:
        - General
      summary: Sets any of Spark's settings.
      responses:
        '200':
          description: Success
  
  /api/settings/get/{setting_name}:
    get:
      tags:
        - General
      summary: Gets any of Spark's settings.
      parameters:
        - name: "setting_name"
          in: "path"
          description: "The path to the setting to be fetched"
          required: true
          example: "echoVRPath"
          schema:
            type: "string"
      responses:
        '200':
          description: Success
  
  
  
  
  /session:
    get:
      tags:
        - Game State
      summary: Proxy for Echo VR's /session route without CORS restrictions. Uses Spark's cache to avoid repeating requests.
      responses:
        '200':
          description: Success
  
  /stats:
    get:
      tags:
        - Game State
      summary: Gets Spark-collected player stat information
      responses:
        '200':
          description: Success
  
  /overlay_info:
    get:
      tags:
        - Overlays
      summary: Overlay info for the configurable overlay
      responses:
        '200':
          description: Success
  
  /disc_positions:
    get:
      tags:
        - Game State
      summary: An array of disc positions for the current game.
      responses:
        '200':
          description: Success
          
          # /disc_position_heatmap:
          #   get:
          #     tags:
          #       - Game State
          #     summary: An overlay with 
          #     responses:
          #       '200':
          #         description: Success
  
  /get_player_speed:
    get:
      tags:
        - Game State
      summary: Returns the current local player speed
      responses:
        '200':
          description: Success
  
  /get_disc_speed:
    get:
      tags:
        - Game State
      summary: Returns the current disc speed
      responses:
        '200':
          description: Success
          
          # /speedometer/{source}:
          #   get:
          #     tags:
          #       - Game State
          #     summary: Returns the current speed of the desired source.
          
          #     parameters:
          #       - name: "source"
          #         in: "path"
          #         description: "The source of the speed to be fetched"
          #         required: true
          #         example: "disc"
          #         schema: 
          #           type: "string"
          #           enum:
          #             - "disc"
          #             - "player"
          #             - "lone_echo_1"
          #             - "lone_echo_2"
          #     responses:
          #       '200':
          #         description: Success
          
          
  /api/db/jousts:
    get:
      tags:
        - Local Database
      summary: Returns a list of all prior jousts recorded on this computer
      responses:
        "200":
          description: "OK"
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          